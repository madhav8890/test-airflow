# airflow_test_dag.py

from airflow.decorators import dag, task
from kubernetes.client import models as k8s
from datetime import datetime

# Define the PVC and volume mount configuration
pvc_name = "airflow-test-pvc"
volume_mount_path = "/mnt/shared"

volume = k8s.V1Volume(
    name="shared-data",
    persistent_volume_claim=k8s.V1PersistentVolumeClaimVolumeSource(claim_name=pvc_name)
)

volume_mount = k8s.V1VolumeMount(
    name="shared-data",
    mount_path=volume_mount_path
)

executor_config = {
    "pod_override": k8s.V1Pod(
        spec=k8s.V1PodSpec(
            containers=[k8s.V1Container(name="base", volume_mounts=[volume_mount])],
            volumes=[volume],
        )
    )
}

@dag(start_date=datetime(2025, 3, 26), schedule=None, dag_id="test_dag_with_pvc")
def test_dag_with_pvc():
    
    @task(executor_config=executor_config)
    def write_to_file():
        file_path = f"{volume_mount_path}/test_file.txt"
        with open(file_path, "w") as f:
            f.write("Hello from Task A!")

    @task(executor_config=executor_config)
    def read_from_file():
        file_path = f"{volume_mount_path}/test_file.txt"
        with open(file_path, "r") as f:
            content = f.read()
        print(f"Content from Task A: {content}")

    write_to_file() >> read_from_file()

# Instantiate the DAG
dag_instance = test_dag_with_pvc()
