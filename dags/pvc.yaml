from airflow.decorators import dag, task
from kubernetes.client import models as k8s
from datetime import datetime

# Shared Volume Configuration
shared_pvc = k8s.V1PersistentVolumeClaimVolumeSource(claim_name="airflow-shared-pvc")
volume = k8s.V1Volume(name="shared-data", persistent_volume_claim=shared_pvc)
volume_mount = k8s.V1VolumeMount(name="shared-data", mount_path="/mnt/shared")

executor_config = {
    "pod_override": k8s.V1Pod(
        spec=k8s.V1PodSpec(
            containers=[k8s.V1Container(name="base", volume_mounts=[volume_mount])],
            volumes=[volume],
        )
    )
}

@dag(start_date=datetime(2025, 3, 30), schedule=None)
def dynamic_volume_dag():
    @task(executor_config=executor_config)
    def task_a(**context):
        run_id = context["run_id"]
        shared_path = f"/mnt/shared/{run_id}/state.txt"
        
        # State को फ़ाइल में सहेजें
        with open(shared_path, "w") as f:
            f.write("Task A completed")

    @task(executor_config=executor_config)
    def task_b(**context):
        run_id = context["run_id"]
        shared_path = f"/mnt/shared/{run_id}/state.txt"
        
        # State को पढ़ें
        with open(shared_path, "r") as f:
            state = f.read()
        print(f"State from Task A: {state}")

    task_a() >> task_b()

dynamic_volume_dag()

